General:
Engine callbacks (entity deleted, scene deleted, scene unloaded, etc.)
Animations
Rethink scene useAsset and removeAsset functions
Scripting
Include BGFX stats to ImGui
Fix dependencies folder and CMake
Optimize component include
Memory manager
Propogate physics events
BGFX leaks
Event system?
Recovery from failure
Move Property and MaterialType to editor, cause they are not mutable during runtime
Rework pin type to be enum
Profiling
Compiler switch to disable some setters in runtime
Namespace refactoring
Move objects for editor so that they don't get destroyed on pipeline change

Licensing:
FMOD splash screen
PhysX splash screen
bgfx splash screen

Serialization:
Name resolve

Asset manager:
In drastic need of reworking
Load caching
Thread pool asset loading
IWorkerThread
IAssetLoader
Rework ILoadable
Asset registry
Abort asset load

Node editor:
Clear graph on new select
Constraints for number of nodes and deletion

FPRP:
Operation resize events
Base vertex shader compiling
Varying generation
Compiling shaders from C++ code
Move MaterialTypeAsset::recalculate to editor
Move MaterialAsset::setType to editor
Pipeline verification

Rendering:
Rethink camera architecture
Views
View names
BGFX multithread encoder
Optimize camera view and projection setting

Audio:
Rethink serialization
3D audio

Components:
Meta enabled field
Handle to ColliderList, audio list etc., managers take care of these lists

Physics:
Multithreading
Substeps
Physics material asset
Disable/enable actors at runtime
Disable/enable colliders at runtime
Broad-Phase callbacks
Collision layers

Editor:
Component architecture rethink
Node editor middle mouse also moves scene view
Copy bgfx shader includes to Raw/
Internal system UI windows (loaded assets, asset manager, etc.)
Unexpected exit or corrupted save restoration
Fix modal architecture
Doube click edit component
Raw folder browser with filtering
Log window
Window resize for viewport
Drag drop files from system
Double clicking drag drop target show in asset browser
3D gizmo
Create build command, to build entire game
Limit toolbar height
Mass slider fill entire range
Block edit on when in game mode
Reset game state on game mode switch
Master banks dir
Link studio Build dir with editor
Detect unloaded bank files
Free scene on new project create
Rename dynamic text API

Code:
this for self invokes
Middleware sections
Remove virtual from places that don't need it
Add consts where no modifications are done
Add final to classes
Add inline
Utility operators for types
Asserts
Error checking
Check memory leaks
Case surround with braces
Mesh loading API optmization
Move enums to files
Move logger to engine system
More verbose logging
